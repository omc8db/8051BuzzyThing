A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     1


MACRO ASSEMBLER A51 V6.02
OBJECT MODULE PLACED IN .\project_source.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE .\project_source.asm NOMOD51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;#include <reg932.h>
                +1     2     
                +1     3     
                +1     4     
                +1     5     
                +1     6     
                +1     7     
                +1     8     
                +1     9     
                +1    10     
                +1    11     
                +1    12     
                +1    13     
                +1    14     
  0080          +1    15     sfr P0   = 0x80;
  0090          +1    16     sfr P1   = 0x90;
  00A0          +1    17     sfr P2   = 0xA0;
  00B0          +1    18     sfr P3   = 0xB0;
  00D0          +1    19     sfr PSW  = 0xD0;
  00E0          +1    20     sfr ACC  = 0xE0;
  00F0          +1    21     sfr B    = 0xF0;
  0081          +1    22     sfr SP   = 0x81;
  0082          +1    23     sfr DPL  = 0x82;
  0083          +1    24     sfr DPH  = 0x83;
  0087          +1    25     sfr PCON = 0x87;
  0088          +1    26     sfr TCON = 0x88;
  0089          +1    27     sfr TMOD = 0x89;
  008A          +1    28     sfr TL0  = 0x8A;
  008B          +1    29     sfr TL1  = 0x8B;
  008C          +1    30     sfr TH0  = 0x8C;
  008D          +1    31     sfr TH1  = 0x8D;
  00A8          +1    32     sfr IEN0 = 0xA8;
  00B8          +1    33     sfr IP0  = 0xB8;
  0098          +1    34     sfr SCON = 0x98;
  0099          +1    35     sfr SBUF = 0x99;
                +1    36     
                +1    37     
  00A2          +1    38     sfr AUXR1  = 0xA2;
  00A9          +1    39     sfr SADDR  = 0xA9;
  00B9          +1    40     sfr SADEN  = 0xB9;
  00CC          +1    41     sfr TL2    = 0xCC;
  00CD          +1    42     sfr TH2    = 0xCD;
  00BE          +1    43     sfr BRGR0  = 0xBE;
  00BF          +1    44     sfr BRGR1  = 0xBF;
  00BD          +1    45     sfr BRGCON = 0xBD;
  00EA          +1    46     sfr CCCRA  = 0xEA;
  00EB          +1    47     sfr CCCRB  = 0xEB;
  00EC          +1    48     sfr CCCRC  = 0xEC;
  00ED          +1    49     sfr CCCRD  = 0xED;
  00AC          +1    50     sfr CMP1   = 0xAC;
  00AD          +1    51     sfr CMP2   = 0xAD;
  00F1          +1    52     sfr DEECON = 0xF1;
  00F2          +1    53     sfr DEEDAT = 0xF2;
  00F3          +1    54     sfr DEEADR = 0xF3;
  0095          +1    55     sfr DIVM   = 0x95;
  00DB          +1    56     sfr I2ADR  = 0xDB;
  00D8          +1    57     sfr I2CON  = 0xD8;
  00DA          +1    58     sfr I2DAT  = 0xDA;
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     2

  00DD          +1    59     sfr I2SCLH = 0xDD;
  00DC          +1    60     sfr I2SCLL = 0xDC;
  00D9          +1    61     sfr I2STAT = 0xD9;
  00AB          +1    62     sfr ICRAH  = 0xAB;
  00AA          +1    63     sfr ICRAL  = 0xAA;
  00AF          +1    64     sfr ICRBH  = 0xAF;
  00AE          +1    65     sfr ICRBL  = 0xAE;
  00E8          +1    66     sfr IEN1   = 0xE8;
  00F8          +1    67     sfr IP1    = 0xF8;
  00F7          +1    68     sfr IP1H   = 0xF7;
  0094          +1    69     sfr KBCON  = 0x94;
  0086          +1    70     sfr KBMASK = 0x86;
  0093          +1    71     sfr KBPATN = 0x93;
  00EF          +1    72     sfr OCRAH  = 0xEF;
  00EE          +1    73     sfr OCRAL  = 0xEE;
  00FB          +1    74     sfr OCRBH  = 0xFB;
  00FA          +1    75     sfr OCRBL  = 0xFA;
  00FD          +1    76     sfr OCRCH  = 0xFD;
  00FC          +1    77     sfr OCRCL  = 0xFC;
  00FF          +1    78     sfr OCRDH  = 0xFF;
  00FE          +1    79     sfr OCRDL  = 0xFE;
  0084          +1    80     sfr P0M1   = 0x84;
  0085          +1    81     sfr P0M2   = 0x85;
  0091          +1    82     sfr P1M1   = 0x91;
  0092          +1    83     sfr P1M2   = 0x92;
  00A4          +1    84     sfr P2M1   = 0xA4;
  00A5          +1    85     sfr P2M2   = 0xA5;
  00B1          +1    86     sfr P3M1   = 0xB1;
  00B2          +1    87     sfr P3M2   = 0xB2;
  00B5          +1    88     sfr PCONA  = 0xB5;
  00F6          +1    89     sfr PT0AD  = 0xF6;
  00DF          +1    90     sfr RSTSRC = 0xDF;
  00D1          +1    91     sfr RTCCON = 0xD1;
  00D2          +1    92     sfr RTCH   = 0xD2;
  00D3          +1    93     sfr RTCL   = 0xD3;
  00BA          +1    94     sfr SSTAT  = 0xBA;
  00E2          +1    95     sfr SPCTL  = 0xE2;
  00E1          +1    96     sfr SPSTAT = 0xE1;
  00E3          +1    97     sfr SPDAT  = 0xE3;
  008F          +1    98     sfr TAMOD  = 0x8F;
  00C8          +1    99     sfr TCR20  = 0xC8;
  00F9          +1   100     sfr TCR21  = 0xF9;
  00C9          +1   101     sfr TICR2  = 0xC9;
  00E9          +1   102     sfr TIFR2  = 0xE9;
  00DE          +1   103     sfr TISE2  = 0xDE;
  00CF          +1   104     sfr TOR2H  = 0xCF;
  00CE          +1   105     sfr TOR2L  = 0xCE;
  00CB          +1   106     sfr TPCR2H = 0xCB;
  00CA          +1   107     sfr TPCR2L = 0xCA;
  0096          +1   108     sfr TRIM   = 0x96;
  00A7          +1   109     sfr WDCON  = 0xA7;
  00C1          +1   110     sfr WDL    = 0xC1;
  00C2          +1   111     sfr WFEED1 = 0xC2;
  00C3          +1   112     sfr WFEED2 = 0xC3;
  00B7          +1   113     sfr IP0H   = 0xB7;
                +1   114     
                +1   115     
                +1   116     
  00D7          +1   117     sbit CY   = PSW^7;
  00D6          +1   118     sbit AC   = PSW^6;
  00D5          +1   119     sbit F0   = PSW^5;
  00D4          +1   120     sbit RS1  = PSW^4;
  00D3          +1   121     sbit RS0  = PSW^3;
  00D2          +1   122     sbit OV   = PSW^2;
  00D1          +1   123     sbit F1   = PSW^1;
  00D0          +1   124     sbit P    = PSW^0;
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     3

                +1   125     
                +1   126     
  008F          +1   127     sbit TF1  = TCON^7;
  008E          +1   128     sbit TR1  = TCON^6;
  008D          +1   129     sbit TF0  = TCON^5;
  008C          +1   130     sbit TR0  = TCON^4;
  008B          +1   131     sbit IE1  = TCON^3;
  008A          +1   132     sbit IT1  = TCON^2;
  0089          +1   133     sbit IE0  = TCON^1;
  0088          +1   134     sbit IT0  = TCON^0;
                +1   135     
                +1   136     
  00AF          +1   137     sbit EA   = IEN0^7;
  00AE          +1   138     sbit EWDRT = IEN0^6;
  00AD          +1   139     sbit EBO   = IEN0^5;
  00AC          +1   140     sbit ES   = IEN0^4; // alternatively "ESR"
  00AC          +1   141     sbit ESR  = IEN0^4;
  00AB          +1   142     sbit ET1  = IEN0^3;
  00AA          +1   143     sbit EX1  = IEN0^2;
  00A9          +1   144     sbit ET0  = IEN0^1;
  00A8          +1   145     sbit EX0  = IEN0^0;
                +1   146     
                +1   147     
  00EF          +1   148     sbit EIEE = IEN1^7;
  00EE          +1   149     sbit EST  = IEN1^6;
  00EC          +1   150     sbit ECCU = IEN1^4;
  00EB          +1   151     sbit ESPI = IEN1^3;
  00EA          +1   152     sbit EC   = IEN1^2;
  00E9          +1   153     sbit EKBI = IEN1^1;
  00E8          +1   154     sbit EI2C = IEN1^0;
                +1   155     
                +1   156      
  00BE          +1   157     sbit PWDRT = IP0^6;
  00BD          +1   158     sbit PB0  = IP0^5;
  00BC          +1   159     sbit PS   = IP0^4; // alternatively "PSR"
  00BC          +1   160     sbit PSR  = IP0^4;
  00BB          +1   161     sbit PT1  = IP0^3;
  00BA          +1   162     sbit PX1  = IP0^2;
  00B9          +1   163     sbit PT0  = IP0^1;
  00B8          +1   164     sbit PX0  = IP0^0;
                +1   165     
                +1   166     
                +1   167     
  009F          +1   168     sbit SM0  = SCON^7; // alternatively "FE"
  009F          +1   169     sbit FE   = SCON^7;
  009E          +1   170     sbit SM1  = SCON^6;
  009D          +1   171     sbit SM2  = SCON^5;
  009C          +1   172     sbit REN  = SCON^4;
  009B          +1   173     sbit TB8  = SCON^3;
  009A          +1   174     sbit RB8  = SCON^2;
  0099          +1   175     sbit TI   = SCON^1;
  0098          +1   176     sbit RI   = SCON^0;
                +1   177     
                +1   178     
  00DE          +1   179     sbit I2EN  = I2CON^6;
  00DD          +1   180     sbit STA   = I2CON^5;
  00DC          +1   181     sbit STO   = I2CON^4;
  00DB          +1   182     sbit SI    = I2CON^3;
  00DA          +1   183     sbit AA    = I2CON^2;
  00D8          +1   184     sbit CRSEL = I2CON^0;
                +1   185     
                +1   186     
  0087          +1   187     sbit KB7 = P0^7; // alternatively "T1"
  0087          +1   188     sbit T1 = P0^7;
  0086          +1   189     sbit KB6 = P0^6; // alternatively "CMP1"
                +1   190     
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     4

  0085          +1   191     sbit KB5 = P0^5;
  0084          +1   192     sbit KB4 = P0^4;
  0083          +1   193     sbit KB3 = P0^3;
  0082          +1   194     sbit KB2 = P0^2;
  0081          +1   195     sbit KB1 = P0^1;
  0080          +1   196     sbit KB0 = P0^0; // alternatively "CMP2"
                +1   197     
                +1   198     
                +1   199     
  0097          +1   200     sbit OCC     = P1^7;
  0096          +1   201     sbit OCB     = P1^6;
  0095          +1   202     sbit RST     = P1^5;
  0094          +1   203     sbit INT1    = P1^4;
  0093          +1   204     sbit INT0    = P1^3; // alternatively "SDA"
  0093          +1   205     sbit SDA     = P1^3;
  0092          +1   206     sbit T0      = P1^2; // alternatively "SCL"
  0092          +1   207     sbit SCL     = P1^2;
  0091          +1   208     sbit RxD     = P1^1;
  0090          +1   209     sbit TxD     = P1^0;
                +1   210     
                +1   211     
  00A7          +1   212     sbit ICA     = P2^7;
  00A6          +1   213     sbit OCA     = P2^6;
  00A5          +1   214     sbit SPICLK  = P2^5;
  00A4          +1   215     sbit SS      = P2^4;
  00A3          +1   216     sbit MISO    = P2^3;
  00A2          +1   217     sbit MOSI    = P2^2;
  00A1          +1   218     sbit OCD     = P2^1;
  00A0          +1   219     sbit ICB     = P2^0;
                +1   220     
                +1   221     
  00B1          +1   222     sbit XTAL1= P3^1;
  00B0          +1   223     sbit XTAL2= P3^0;
                +1   224     
                +1   225     
  00CF          +1   226     sbit PLEEN = TCR20^7;
  00CE          +1   227     sbit HLTRN = TCR20^6;
  00CD          +1   228     sbit HLTEN = TCR20^5;
  00CC          +1   229     sbit ALTCD = TCR20^4;
  00CB          +1   230     sbit ALTAB = TCR20^3;
  00CA          +1   231     sbit TDIR2 = TCR20^2;
  00C9          +1   232     sbit TMOD21= TCR20^1;
  00C8          +1   233     sbit TMOD20= TCR20^0;
                +1   234     
                +1   235     
                +1   236     
                     237     
                     238     ;#include <simon2.h>
                +1   239     
                +1   240     
                +1   241     
                +1   242     
                +1   243     
                +1   244     
                +1   245     
                +1   246     
                +1   247     
                +1   248     
                +1   249     
                +1   250     
                +1   251     
                +1   252     
                +1   253     
                +1   254     
                +1   255     
                +1   256     
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     5

                +1   257     
                +1   258     
                +1   259     
                +1   260     
                +1   261     
                +1   262     
                +1   263     
                +1   264     
                +1   265     
                +1   266     
                +1   267     
                +1   268     
                +1   269     
                +1   270     
                +1   271     
                     272     
                     273     
                     274     ;These names come from simon2.h. They are printed on the silkscreen.
                     275     ;Inputs
                     276     
                     277     
                     278     
                     279     
                     280     
                     281     
                     282     
                     283     
                     284     
                     285     ;Outputs
                     286     
                     287     
                     288     
                     289     
                     290     
                     291     ;Parameters
                     292     
                     293     
                     294     
                     295     ;Reserved Registers
                     296     
                     297     ;R4-R7 available for other usage
                     298     
----                 299     cseg at 0                       ; tells the assembler to place the first
                     300                                     ; instruction at address 0
0000                 301     setup:                          ;
0000 75A400          302             mov P2M1,#0             ; set Port 2 to bi-directional
0003 759100          303             mov P1M1,#0             ; set Port 1 to bi-directional
0006 758400          304             mov P0M1,#0             ; set Port 0 to bi-directional
0009 7A00            305             mov R2,#0       ; Initialize count to 0
                     306     
000B 120114          307             lcall transition_left   ;
                     308     
000E                 309     loop:                           ; label for the sjmp instruction
000E 208103          310             jb p0.1,skip_inc        ; allows increment to be called if switch is pressed
0011 120068          311             lcall increment         ; 
0014                 312      skip_inc:                      ;
                     313     
0014 20A003          314             jb p2.0,skip_dec        ; allows decrement to be called if switch is pressed
0017 120080          315             lcall decrement         ;
001A                 316      skip_dec:                      ;
                     317     
                     318             ; Function call routine
001A 20A310          319             jb p2.3,skip_malick     ; 
001D 120114          320             lcall transition_left   ; Play a transition
0020 C003            321             push 03h                ; Store the count
                     322     
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     6

0022 120171          323             lcall malick_feature    ; Call the function
                     324     
0025 D003            325             pop 03h                 ; Restore the count
0027 1200F5          326             lcall transition_right  ;
002A 1200BB          327             lcall led_display_count ;
002D                 328      skip_malick:                   ;
                     329     
                     330      
002D 208010          331             jb p0.0,skip_owen       ; 
0030 120114          332             lcall transition_left   ;
0033 C003            333             push 03h                ; Store the count
                     334     
0035 1201DC          335             lcall owen_feature      ;
                     336     
0038 D003            337             pop 03h                 ; Restore the count
003A 1200F5          338             lcall transition_right  ;
003D 1200BB          339             lcall led_display_count ;
0040                 340      skip_owen:                     ;
                     341     
                     342             
0040 20A210          343             jb p2.2,skip_judah; 
0043 120114          344             lcall transition_left   ;
0046 C003            345             push 03h                ; Store the count
                     346     
0048 120261          347             lcall judah_feature     ;
                     348     
004B D003            349             pop 03h                 ; Restore the count
004D 1200F5          350             lcall transition_right  ;
0050 1200BB          351             lcall led_display_count ;
0053                 352      skip_judah:                    ;
                     353      
0053 208310          354             jb p0.3,skip_drue; 
0056 120114          355             lcall transition_left   ;
0059 C003            356             push 03h                ; Store the count
                     357     
005B 120262          358             lcall drue_feature      ;
                     359     
005E D003            360             pop 03h                 ; Restore the count
0060 1200F5          361             lcall transition_right  ;
0063 1200BB          362             lcall led_display_count ;
0066                 363      skip_drue:                     ;
                     364     
0066 80A6            365             sjmp loop               ;
                     366     
                     367     ;start of increment subroutine
0068                 368     increment:                      ;
0068 1200B2          369             lcall debounce_delay            ; Delay to debounce
006B                 370      inc_no_release:                ; wait for button to be released
006B 3081FD          371             jnb p0.1,inc_no_release;
                     372     
                     373             ;Increment
006E 0A              374             inc R2  ;
                     375     
                     376             ;check for overflow
006F EA              377             MOV A,R2        ;
0070 5410            378             ANL A, #10h             ; Check the fifth bit for overflow
0072 6005            379             jz inc_no_overflow      ;
0074 12009A          380             lcall buzz              ;
0077 7A00            381             mov R2,#0       ; Reset the counter to 0
                     382     
                     383             
0079                 384      inc_no_overflow:               ;
                     385             ;update display
0079 1200BB          386             lcall led_display_count ;
                     387             
                     388             ;more debouncing
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     7

007C 1200B2          389             lcall debounce_delay    ;
007F 22              390             ret                     ;
                     391     ;end of increment subroutine
                     392     
                     393     
                     394     
                     395     ;start of decrement subroutine
0080                 396     decrement:                      ;
0080 1200B2          397             lcall debounce_delay    ;
0083                 398      dec_no_release:                ;
0083 30A0FD          399             jnb p2.0,dec_no_release;
0086 C2A4            400             clr p2.4                ;
                     401     
                     402             ;Decrement
0088 1A              403             dec R2  ;
                     404     
                     405             ;check for overflow
0089 EA              406             MOV A,R2        ;
008A 5480            407             ANL A, #80h             ; Check the eighth bit for overflow
008C 6005            408             jz dec_no_overflow      ;
008E 12009A          409             lcall buzz              ;
0091 7A0F            410             mov R2,#15      ; Reset the counter to 15
                     411     
                     412             
0093                 413      dec_no_overflow:       ;
                     414             
                     415             ;update display
0093 1200BB          416             lcall led_display_count ;
                     417     
                     418             ;more debouncing
0096 1200B2          419             lcall debounce_delay    ;
0099 22              420             ret                     ;
                     421     ;end of decrement subroutine
                     422     
                     423     
                     424     
                     425     ;start of buzz subroutine
009A                 426     buzz:   
009A 7B80            427             mov R3, #128    ;
009C                 428      buzzer_loop:   
009C D297            429             setb p1.7       ;       
009E 1200A9          430             lcall buzz_delay        ;
00A1 C297            431             clr p1.7                ;
00A3 1200A9          432             lcall buzz_delay        ;
00A6 DBF4            433      djnz R3, buzzer_loop   ;
00A8 22              434             ret                     ;
                     435     
                     436     
00A9                 437     buzz_delay:
00A9 7D07            438             mov R5, #7                      ;
00AB                 439      buzz_delay_outer:
00AB 7EFF            440             mov R6, #255                    ;
00AD                 441       buzz_delay_inner:                             
00AD DEFE            442       djnz R6, buzz_delay_inner     ;
00AF DDFA            443      djnz R5, buzz_delay_outer      ;
00B1 22              444             ret                             ;
                     445     ;end of buzz subroutine
                     446     
                     447     
                     448     
                     449     ;start of debounce_delay subroutine
00B2                 450     debounce_delay:
00B2 7CFF            451             mov R4,#255     ; Change this   ;
00B4                 452      debounce_delay_loop0:
00B4 7BFF            453             mov R3,#255     ; Change this   ;
00B6                 454      debounce_delay_loop1:          ;
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     8

00B6 DBFE            455             djnz R3,debounce_delay_loop1;
00B8 DCFA            456             djnz R4,debounce_delay_loop0;
00BA 22              457             ret                     ;
                     458     ;end of debounce_delay subroutine
                     459     
                     460     
                     461     
                     462     ;start of led_display_count subroutine
00BB                 463     led_display_count:                      ;
00BB EA              464             mov A, R2       ;
00BC 5401            465             anl A, #01h             ; //Get the first bit (LSB) of count
                     466             ;A is nonzero if the bit we want is nonzero
                     467             ; Otherwise, A is the value of the bit
00BE 6004            468             jz bit0_off_jmp ;  
00C0 C2A4            469             clr p2.4                ;
00C2 8002            470             sjmp bit0_on_jmp        ; 
00C4                 471      bit0_off_jmp:                  ;
00C4 D2A4            472             setb p2.4               ;
00C6                 473      bit0_on_jmp:                   ;
                     474     
00C6 EA              475             mov A, R2       ;
00C7 5402            476             anl A, #02h             ; //Get the second bit of count
00C9 6004            477             jz bit1_off_jmp ;  
00CB C286            478             clr p0.6                ;
00CD 8002            479             sjmp bit1_on_jmp        ; 
00CF                 480      bit1_off_jmp:                  ;
00CF D286            481             setb p0.6               ;
00D1                 482      bit1_on_jmp:                   ;
                     483     
00D1 EA              484             mov A, R2       ;
00D2 5404            485             anl A, #04h             ; //Get the third bit of count
00D4 6004            486             jz bit2_off_jmp ;  
00D6 C285            487             clr p0.5                ;
00D8 8002            488             sjmp bit2_on_jmp        ; 
00DA                 489      bit2_off_jmp:                  ;
00DA D285            490             setb p0.5               ;
00DC                 491      bit2_on_jmp:                   ;
                     492             
00DC EA              493             mov A, R2       ;
00DD 5408            494             anl A, #08h             ; //Get the fourth bit (MSB) of count
00DF 6004            495             jz bit3_off_jmp ;  
00E1 C296            496             clr p1.6                ;
00E3 8002            497             sjmp bit3_on_jmp        ; 
00E5                 498      bit3_off_jmp:                  ;
00E5 D296            499             setb p1.6               ;
00E7                 500      bit3_on_jmp:                   ;
                     501     
00E7 22              502             ret                     ;
                     503     ;end of led_display_count subroutine
                     504     
                     505     ;start of third_sec_delay function
00E8                 506     third_sec_delay:                ;
                     507     
00E8 7C0A            508             mov R4,#10              ;
00EA                 509      tsd_loop0:                     ;
00EA 7DFF            510             mov R5,#255             ;
00EC                 511       tsd_loop1:                    ;
00EC 7EFF            512             mov R6,#255             ;
00EE                 513        tsd_loop2:                   ;
00EE DEFE            514             djnz R6,tsd_loop2       ;
00F0 DDFA            515             djnz R5,tsd_loop1       ;
00F2 DCF6            516             djnz R4,tsd_loop0       ;
00F4 22              517             ret;
                     518     ;end of third_sec_delay
                     519     
                     520     ;start of transition_right
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE     9

00F5                 521     transition_right:               ;
                     522     
00F5 120133          523             lcall col1_on           ;
00F8 1200E8          524             lcall third_sec_delay   ;
00FB 120141          525             lcall col2_on           ;
00FE 1200E8          526             lcall third_sec_delay   ;
0101 12013A          527             lcall col1_off          ;
0104 12014F          528             lcall col3_on           ;
0107 1200E8          529             lcall third_sec_delay   ;
010A 120148          530             lcall col2_off          ;
010D 1200E8          531             lcall third_sec_delay   ;
0110 120156          532             lcall col3_off          ;
                     533             
0113 22              534             ret                     ;
                     535     ;end of transition_right
                     536     
                     537     ;start of transition_left
0114                 538     transition_left:                ;
0114 12014F          539             lcall col3_on           ;
0117 1200E8          540             lcall third_sec_delay   ;
011A 120141          541             lcall col2_on           ;
011D 1200E8          542             lcall third_sec_delay   ;
0120 120156          543             lcall col3_off          ;
0123 120133          544             lcall col1_on           ;
0126 1200E8          545             lcall third_sec_delay   ;
0129 120148          546             lcall col2_off          ;
012C 1200E8          547             lcall third_sec_delay   ;
012F 12013A          548             lcall col1_off          ;
                     549             
0132 22              550             ret                     ;
                     551     ;end of transition_left
                     552     
                     553     ;start of column functions
0133                 554     col1_on:                        ;
0133 C2A4            555             clr p2.4                ;
0135 C286            556             clr p0.6                ;
0137 C2A5            557             clr p2.5                ;
0139 22              558             ret                     ;
013A                 559     col1_off:                       ;
013A D2A4            560             setb p2.4               ;
013C D286            561             setb p0.6               ;
013E D2A5            562             setb p2.5               ;
0140 22              563             ret                     ;
0141                 564     col2_on:                        ;
0141 C285            565             clr p0.5                ;
0143 C296            566             clr p1.6                ;
0145 C287            567             clr p0.7                ;
0147 22              568             ret                     ;
0148                 569     col2_off:                       ;
0148 D285            570             setb p0.5               ;
014A D296            571             setb p1.6               ;
014C D287            572             setb p0.7               ;
014E 22              573             ret                     ;
014F                 574     col3_on:                        ;
014F C2A7            575             clr p2.7                ;
0151 C284            576             clr p0.4                ;
0153 C2A6            577             clr p2.6                ;
0155 22              578             ret                     ;
0156                 579     col3_off:
0156 D2A7            580             setb p2.7               ;
0158 D284            581             setb p0.4               ;
015A D2A6            582             setb p2.6               ;
015C 22              583             ret                     ;
015D                 584     clr_screen:
015D 12013A          585             lcall col1_off          ;
0160 120148          586             lcall col2_off          ;
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    10

0163 120156          587             lcall col3_off          ;
0166 22              588             ret                     ;
0167                 589     all_lights_on:
0167 120133          590             lcall col1_on           ;
016A 120141          591             lcall col2_on           ;
016D 12014F          592             lcall col3_on           ;
0170 22              593             ret                     ;
                     594     ;end of column functions
                     595     
                     596     ;start of malick_feature
0171                 597     malick_feature:                 ;
0171 7F08            598             mov R7,#8
0173                 599     circle:
                     600     
                     601             ;check for buttons
                     602     
0173 20A303          603             jb p2.3,skip_check_up   ;
0176 1201AE          604             lcall check_up          ;
0179                 605      skip_check_up:                 ;
                     606     
                     607     
0179 208003          608             jb p0.0,skip_check_down ;
017C 1201BB          609             lcall check_down        ;
017F                 610      skip_check_down:               ;
                     611     
                     612      
017F 20A203          613             jb p2.2,skip_go_faster  ;
0182 1201D5          614             lcall go_faster         ;
0185                 615      skip_go_faster:                ;
                     616     
                     617      
0185 208303          618             jb p0.3,skip_go_slower  ;
0188 1201D9          619             lcall go_slower         ;
018B                 620      skip_go_slower:                ;
                     621     
018B 20A101          622             jb p2.1,skip_exit
018E 22              623             ret
018F                 624     skip_exit:
                     625     
                     626             ;Light up LEDs in a circle
018F C2A4            627             clr p2.4
0191 1201C8          628             lcall malick_delay;
0194 D2A4            629             setb p2.4
                     630     
0196 C286            631             clr p0.6
0198 1201C8          632             lcall malick_delay;
019B D286            633             setb p0.6
                     634     
019D C296            635             clr p1.6
019F 1201C8          636             lcall malick_delay;
01A2 D296            637             setb p1.6
01A4 C285            638             clr p0.5
01A6 1201C8          639             lcall malick_delay;
01A9 D285            640             setb p0.5
                     641             
01AB 80C6            642             sjmp circle;
                     643     
01AD 22              644             ret                     ;
                     645     ;end of malick_feature
                     646     
                     647     
                     648     ;Check Upper Lights
01AE                 649     check_up:
                     650     
01AE 20A409          651             jb p2.4, out1
01B1 12009A          652             lcall buzz;
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    11

01B4 208503          653             jb p0.5, out1
01B7 12009A          654             lcall buzz;
01BA                 655     out1:
01BA 22              656             ret
                     657     ;End of checking upper lights
                     658     
                     659     
                     660     ;Check Lower Lights
01BB                 661     check_down:
                     662     
01BB 208609          663             jb p0.6, out2
01BE 12009A          664             lcall buzz;
01C1 209603          665             jb p1.6, out2
01C4 12009A          666             lcall buzz;
01C7                 667     out2:
01C7 22              668             ret
                     669     ;End of checking lower lights
                     670     
                     671     ;beginning of malick_delay
01C8                 672     malick_delay:
01C8 EF              673             mov A,R7                ;
01C9 FC              674             mov R4,A                ;
01CA                 675      tsd_loop3:                     ;
01CA 7DFF            676             mov R5,#255             ;
01CC                 677       tsd_loop4:                    ;
01CC 7EFF            678             mov R6,#255             ;
01CE                 679        tsd_loop5:                   ;
01CE DEFE            680             djnz R6,tsd_loop5       ;
01D0 DDFA            681             djnz R5,tsd_loop4       ;
01D2 DCF6            682             djnz R4,tsd_loop3       ;
01D4 22              683             ret;
                     684     ;end of malick_delay
                     685     
                     686     
                     687     ;beginning of go_faster 
01D5                 688     go_faster:
01D5 BFFF00          689             cjne R7,#255,dont_change
01D8                 690     dont_change:
01D8 22              691             ret
                     692     ;end of go_faster
                     693     
                     694     ;beginning of go_slower
01D9                 695     go_slower:
01D9 DF00            696             djnz R7,never_mind
01DB                 697     never_mind:
01DB 22              698             ret
                     699     ;end of go_slower
                     700     
                     701     
                     702     ;start of owen_feature
01DC                 703     owen_feature:                   ;
                     704     
                     705             ;output 'O'
01DC C2A4            706             clr p2.4                ;
01DE C286            707             clr p0.6                ;
01E0 C2A5            708             clr p2.5                ;
01E2 C285            709             clr p0.5                ;
01E4 D296            710             setb p1.6               ;
01E6 C287            711             clr p0.7                ;
01E8 C2A7            712             clr p2.7                ;
01EA C284            713             clr p0.4                ;
01EC C2A6            714             clr p2.6                ;
                     715     
01EE 1200E8          716             lcall third_sec_delay   ;
01F1 1200E8          717             lcall third_sec_delay   ;
01F4 1200E8          718             lcall third_sec_delay   ;
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    12

01F7 12015D          719             lcall clr_screen        ;
01FA 1200E8          720             lcall third_sec_delay   ;
                     721     
                     722             ;output 'W'
01FD C2A4            723             clr p2.4                ;
01FF C286            724             clr p0.6                ;
0201 C2A5            725             clr p2.5                ;
0203 D285            726             setb p0.5               ;
0205 C296            727             clr p1.6                ;
0207 C287            728             clr p0.7                ;
0209 C2A7            729             clr p2.7                ;
020B C284            730             clr p0.4                ;
020D C2A6            731             clr p2.6                ;
                     732     
020F 1200E8          733             lcall third_sec_delay   ;
0212 1200E8          734             lcall third_sec_delay   ;
0215 1200E8          735             lcall third_sec_delay   ;
0218 12015D          736             lcall clr_screen        ;
021B 1200E8          737             lcall third_sec_delay   ;
                     738             
                     739             ;output 'E'
021E C2A4            740             clr p2.4                ;
0220 C286            741             clr p0.6                ;
0222 C2A5            742             clr p2.5                ;
0224 C285            743             clr p0.5                ;
0226 C296            744             clr p1.6                ;
0228 C287            745             clr p0.7                ;
022A C2A7            746             clr p2.7                ;
022C D284            747             setb p0.4               ;
022E C2A6            748             clr p2.6                ;
                     749     
                     750     
0230 1200E8          751             lcall third_sec_delay   ;
0233 1200E8          752             lcall third_sec_delay   ;
0236 1200E8          753             lcall third_sec_delay   ;
0239 12015D          754             lcall clr_screen        ;
023C 1200E8          755             lcall third_sec_delay   ;               
                     756     
                     757             ;output 'N'
023F C2A4            758             clr p2.4                ;
0241 C286            759             clr p0.6                ;
0243 C2A5            760             clr p2.5                ;
0245 C285            761             clr p0.5                ;
0247 D296            762             setb p1.6               ;
0249 D287            763             setb p0.7               ;
024B C2A7            764             clr p2.7                ;
024D C284            765             clr p0.4                ;
024F C2A6            766             clr p2.6                ;
                     767     
                     768     
0251 1200E8          769             lcall third_sec_delay   ;
0254 1200E8          770             lcall third_sec_delay   ;
0257 1200E8          771             lcall third_sec_delay   ;
025A 12015D          772             lcall clr_screen        ;
025D 1200E8          773             lcall third_sec_delay   ;
                     774             
0260 22              775             ret                     ;
                     776     ;end of owen_feature
                     777     
                     778     ;start of judah_feature         ;
0261                 779     judah_feature:
0261 22              780             ret                     ;
                     781     ;end of judah_feature           ;
                     782     
                     783     ;start of drue_feature          ;
0262                 784     drue_feature:
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    13

0262 22              785             ret                     ;
                     786     ;end of drue_feature            ;
                     787     
                     788     end
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E               T Y P E  V A L U E   ATTRIBUTES

AA . . . . . . . . .  B ADDR   00D8H.2 A   
AC . . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . . .  N NUMB   00E0H   A   
ALL_LIGHTS_ON. . . .  C ADDR   0167H   A   
ALTAB. . . . . . . .  B ADDR   00C8H.3 A   
ALTCD. . . . . . . .  B ADDR   00C8H.4 A   
AUXR1. . . . . . . .  N NUMB   00A2H   A   
B. . . . . . . . . .  N NUMB   00F0H   A   
BIT0_OFF_JMP . . . .  C ADDR   00C4H   A   
BIT0_ON_JMP. . . . .  C ADDR   00C6H   A   
BIT1_OFF_JMP . . . .  C ADDR   00CFH   A   
BIT1_ON_JMP. . . . .  C ADDR   00D1H   A   
BIT2_OFF_JMP . . . .  C ADDR   00DAH   A   
BIT2_ON_JMP. . . . .  C ADDR   00DCH   A   
BIT3_OFF_JMP . . . .  C ADDR   00E5H   A   
BIT3_ON_JMP. . . . .  C ADDR   00E7H   A   
BRGCON . . . . . . .  N NUMB   00BDH   A   
BRGR0. . . . . . . .  N NUMB   00BEH   A   
BRGR1. . . . . . . .  N NUMB   00BFH   A   
BUZZ . . . . . . . .  C ADDR   009AH   A   
BUZZER_LOOP. . . . .  C ADDR   009CH   A   
BUZZ_DELAY . . . . .  C ADDR   00A9H   A   
BUZZ_DELAY_INNER . .  C ADDR   00ADH   A   
BUZZ_DELAY_OUTER . .  C ADDR   00ABH   A   
CCCRA. . . . . . . .  N NUMB   00EAH   A   
CCCRB. . . . . . . .  N NUMB   00EBH   A   
CCCRC. . . . . . . .  N NUMB   00ECH   A   
CCCRD. . . . . . . .  N NUMB   00EDH   A   
CHECK_DOWN . . . . .  C ADDR   01BBH   A   
CHECK_UP . . . . . .  C ADDR   01AEH   A   
CIRCLE . . . . . . .  C ADDR   0173H   A   
CLR_SCREEN . . . . .  C ADDR   015DH   A   
CMP1 . . . . . . . .  N NUMB   00ACH   A   
CMP2 . . . . . . . .  N NUMB   00ADH   A   
COL1_OFF . . . . . .  C ADDR   013AH   A   
COL1_ON. . . . . . .  C ADDR   0133H   A   
COL2_OFF . . . . . .  C ADDR   0148H   A   
COL2_ON. . . . . . .  C ADDR   0141H   A   
COL3_OFF . . . . . .  C ADDR   0156H   A   
COL3_ON. . . . . . .  C ADDR   014FH   A   
CRSEL. . . . . . . .  B ADDR   00D8H.0 A   
CY . . . . . . . . .  B ADDR   00D0H.7 A   
DEBOUNCE_DELAY . . .  C ADDR   00B2H   A   
DEBOUNCE_DELAY_LOOP0  C ADDR   00B4H   A   
DEBOUNCE_DELAY_LOOP1  C ADDR   00B6H   A   
DECREMENT. . . . . .  C ADDR   0080H   A   
DEC_NO_OVERFLOW. . .  C ADDR   0093H   A   
DEC_NO_RELEASE . . .  C ADDR   0083H   A   
DEEADR . . . . . . .  N NUMB   00F3H   A   
DEECON . . . . . . .  N NUMB   00F1H   A   
DEEDAT . . . . . . .  N NUMB   00F2H   A   
DIVM . . . . . . . .  N NUMB   0095H   A   
DONT_CHANGE. . . . .  C ADDR   01D8H   A   
DPH. . . . . . . . .  N NUMB   0083H   A   
DPL. . . . . . . . .  N NUMB   0082H   A   
DRUE_FEATURE . . . .  C ADDR   0262H   A   
EA . . . . . . . . .  B ADDR   00A8H.7 A   
EBO. . . . . . . . .  B ADDR   00A8H.5 A   
EC . . . . . . . . .  B ADDR   00E8H.2 A   
ECCU . . . . . . . .  B ADDR   00E8H.4 A   
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    15

EI2C . . . . . . . .  B ADDR   00E8H.0 A   
EIEE . . . . . . . .  B ADDR   00E8H.7 A   
EKBI . . . . . . . .  B ADDR   00E8H.1 A   
ES . . . . . . . . .  B ADDR   00A8H.4 A   
ESPI . . . . . . . .  B ADDR   00E8H.3 A   
ESR. . . . . . . . .  B ADDR   00A8H.4 A   
EST. . . . . . . . .  B ADDR   00E8H.6 A   
ET0. . . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . . .  B ADDR   00A8H.3 A   
EWDRT. . . . . . . .  B ADDR   00A8H.6 A   
EX0. . . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . . .  B ADDR   00A8H.2 A   
F0 . . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . . .  B ADDR   00D0H.1 A   
FE . . . . . . . . .  B ADDR   0098H.7 A   
GO_FASTER. . . . . .  C ADDR   01D5H   A   
GO_SLOWER. . . . . .  C ADDR   01D9H   A   
HLTEN. . . . . . . .  B ADDR   00C8H.5 A   
HLTRN. . . . . . . .  B ADDR   00C8H.6 A   
I2ADR. . . . . . . .  N NUMB   00DBH   A   
I2CON. . . . . . . .  N NUMB   00D8H   A   
I2DAT. . . . . . . .  N NUMB   00DAH   A   
I2EN . . . . . . . .  B ADDR   00D8H.6 A   
I2SCLH . . . . . . .  N NUMB   00DDH   A   
I2SCLL . . . . . . .  N NUMB   00DCH   A   
I2STAT . . . . . . .  N NUMB   00D9H   A   
ICA. . . . . . . . .  B ADDR   00A0H.7 A   
ICB. . . . . . . . .  B ADDR   00A0H.0 A   
ICRAH. . . . . . . .  N NUMB   00ABH   A   
ICRAL. . . . . . . .  N NUMB   00AAH   A   
ICRBH. . . . . . . .  N NUMB   00AFH   A   
ICRBL. . . . . . . .  N NUMB   00AEH   A   
IE0. . . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . . .  N NUMB   00A8H   A   
IEN1 . . . . . . . .  N NUMB   00E8H   A   
INCREMENT. . . . . .  C ADDR   0068H   A   
INC_NO_OVERFLOW. . .  C ADDR   0079H   A   
INC_NO_RELEASE . . .  C ADDR   006BH   A   
INT0 . . . . . . . .  B ADDR   0090H.3 A   
INT1 . . . . . . . .  B ADDR   0090H.4 A   
IP0. . . . . . . . .  N NUMB   00B8H   A   
IP0H . . . . . . . .  N NUMB   00B7H   A   
IP1. . . . . . . . .  N NUMB   00F8H   A   
IP1H . . . . . . . .  N NUMB   00F7H   A   
IT0. . . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . . .  B ADDR   0088H.2 A   
JUDAH_FEATURE. . . .  C ADDR   0261H   A   
KB0. . . . . . . . .  B ADDR   0080H.0 A   
KB1. . . . . . . . .  B ADDR   0080H.1 A   
KB2. . . . . . . . .  B ADDR   0080H.2 A   
KB3. . . . . . . . .  B ADDR   0080H.3 A   
KB4. . . . . . . . .  B ADDR   0080H.4 A   
KB5. . . . . . . . .  B ADDR   0080H.5 A   
KB6. . . . . . . . .  B ADDR   0080H.6 A   
KB7. . . . . . . . .  B ADDR   0080H.7 A   
KBCON. . . . . . . .  N NUMB   0094H   A   
KBMASK . . . . . . .  N NUMB   0086H   A   
KBPATN . . . . . . .  N NUMB   0093H   A   
LED_DISPLAY_COUNT. .  C ADDR   00BBH   A   
LOOP . . . . . . . .  C ADDR   000EH   A   
MALICK_DELAY . . . .  C ADDR   01C8H   A   
MALICK_FEATURE . . .  C ADDR   0171H   A   
MISO . . . . . . . .  B ADDR   00A0H.3 A   
MOSI . . . . . . . .  B ADDR   00A0H.2 A   
NEVER_MIND . . . . .  C ADDR   01DBH   A   
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    16

OCA. . . . . . . . .  B ADDR   00A0H.6 A   
OCB. . . . . . . . .  B ADDR   0090H.6 A   
OCC. . . . . . . . .  B ADDR   0090H.7 A   
OCD. . . . . . . . .  B ADDR   00A0H.1 A   
OCRAH. . . . . . . .  N NUMB   00EFH   A   
OCRAL. . . . . . . .  N NUMB   00EEH   A   
OCRBH. . . . . . . .  N NUMB   00FBH   A   
OCRBL. . . . . . . .  N NUMB   00FAH   A   
OCRCH. . . . . . . .  N NUMB   00FDH   A   
OCRCL. . . . . . . .  N NUMB   00FCH   A   
OCRDH. . . . . . . .  N NUMB   00FFH   A   
OCRDL. . . . . . . .  N NUMB   00FEH   A   
OUT1 . . . . . . . .  C ADDR   01BAH   A   
OUT2 . . . . . . . .  C ADDR   01C7H   A   
OV . . . . . . . . .  B ADDR   00D0H.2 A   
OWEN_FEATURE . . . .  C ADDR   01DCH   A   
P. . . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . . .  N NUMB   0080H   A   
P0M1 . . . . . . . .  N NUMB   0084H   A   
P0M2 . . . . . . . .  N NUMB   0085H   A   
P1 . . . . . . . . .  N NUMB   0090H   A   
P1M1 . . . . . . . .  N NUMB   0091H   A   
P1M2 . . . . . . . .  N NUMB   0092H   A   
P2 . . . . . . . . .  N NUMB   00A0H   A   
P2M1 . . . . . . . .  N NUMB   00A4H   A   
P2M2 . . . . . . . .  N NUMB   00A5H   A   
P3 . . . . . . . . .  N NUMB   00B0H   A   
P3M1 . . . . . . . .  N NUMB   00B1H   A   
P3M2 . . . . . . . .  N NUMB   00B2H   A   
PB0. . . . . . . . .  B ADDR   00B8H.5 A   
PCON . . . . . . . .  N NUMB   0087H   A   
PCONA. . . . . . . .  N NUMB   00B5H   A   
PLEEN. . . . . . . .  B ADDR   00C8H.7 A   
PS . . . . . . . . .  B ADDR   00B8H.4 A   
PSR. . . . . . . . .  B ADDR   00B8H.4 A   
PSW. . . . . . . . .  N NUMB   00D0H   A   
PT0. . . . . . . . .  B ADDR   00B8H.1 A   
PT0AD. . . . . . . .  N NUMB   00F6H   A   
PT1. . . . . . . . .  B ADDR   00B8H.3 A   
PWDRT. . . . . . . .  B ADDR   00B8H.6 A   
PX0. . . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . . .  B ADDR   00B8H.2 A   
RB8. . . . . . . . .  B ADDR   0098H.2 A   
REN. . . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . . .  B ADDR   00D0H.4 A   
RST. . . . . . . . .  B ADDR   0090H.5 A   
RSTSRC . . . . . . .  N NUMB   00DFH   A   
RTCCON . . . . . . .  N NUMB   00D1H   A   
RTCH . . . . . . . .  N NUMB   00D2H   A   
RTCL . . . . . . . .  N NUMB   00D3H   A   
RXD. . . . . . . . .  B ADDR   0090H.1 A   
SADDR. . . . . . . .  N NUMB   00A9H   A   
SADEN. . . . . . . .  N NUMB   00B9H   A   
SBUF . . . . . . . .  N NUMB   0099H   A   
SCL. . . . . . . . .  B ADDR   0090H.2 A   
SCON . . . . . . . .  N NUMB   0098H   A   
SDA. . . . . . . . .  B ADDR   0090H.3 A   
SETUP. . . . . . . .  C ADDR   0000H   A   
SI . . . . . . . . .  B ADDR   00D8H.3 A   
SKIP_CHECK_DOWN. . .  C ADDR   017FH   A   
SKIP_CHECK_UP. . . .  C ADDR   0179H   A   
SKIP_DEC . . . . . .  C ADDR   001AH   A   
SKIP_DRUE. . . . . .  C ADDR   0066H   A   
SKIP_EXIT. . . . . .  C ADDR   018FH   A   
A51 MACRO ASSEMBLER  PROJECT_SOURCE                                                       04/15/2015 18:11:59 PAGE    17

SKIP_GO_FASTER . . .  C ADDR   0185H   A   
SKIP_GO_SLOWER . . .  C ADDR   018BH   A   
SKIP_INC . . . . . .  C ADDR   0014H   A   
SKIP_JUDAH . . . . .  C ADDR   0053H   A   
SKIP_MALICK. . . . .  C ADDR   002DH   A   
SKIP_OWEN. . . . . .  C ADDR   0040H   A   
SM0. . . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . . .  N NUMB   0081H   A   
SPCTL. . . . . . . .  N NUMB   00E2H   A   
SPDAT. . . . . . . .  N NUMB   00E3H   A   
SPICLK . . . . . . .  B ADDR   00A0H.5 A   
SPSTAT . . . . . . .  N NUMB   00E1H   A   
SS . . . . . . . . .  B ADDR   00A0H.4 A   
SSTAT. . . . . . . .  N NUMB   00BAH   A   
STA. . . . . . . . .  B ADDR   00D8H.5 A   
STO. . . . . . . . .  B ADDR   00D8H.4 A   
T0 . . . . . . . . .  B ADDR   0090H.2 A   
T1 . . . . . . . . .  B ADDR   0080H.7 A   
TAMOD. . . . . . . .  N NUMB   008FH   A   
TB8. . . . . . . . .  B ADDR   0098H.3 A   
TCON . . . . . . . .  N NUMB   0088H   A   
TCR20. . . . . . . .  N NUMB   00C8H   A   
TCR21. . . . . . . .  N NUMB   00F9H   A   
TDIR2. . . . . . . .  B ADDR   00C8H.2 A   
TF0. . . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . . .  N NUMB   008CH   A   
TH1. . . . . . . . .  N NUMB   008DH   A   
TH2. . . . . . . . .  N NUMB   00CDH   A   
THIRD_SEC_DELAY. . .  C ADDR   00E8H   A   
TI . . . . . . . . .  B ADDR   0098H.1 A   
TICR2. . . . . . . .  N NUMB   00C9H   A   
TIFR2. . . . . . . .  N NUMB   00E9H   A   
TISE2. . . . . . . .  N NUMB   00DEH   A   
TL0. . . . . . . . .  N NUMB   008AH   A   
TL1. . . . . . . . .  N NUMB   008BH   A   
TL2. . . . . . . . .  N NUMB   00CCH   A   
TMOD . . . . . . . .  N NUMB   0089H   A   
TMOD20 . . . . . . .  B ADDR   00C8H.0 A   
TMOD21 . . . . . . .  B ADDR   00C8H.1 A   
TOR2H. . . . . . . .  N NUMB   00CFH   A   
TOR2L. . . . . . . .  N NUMB   00CEH   A   
TPCR2H . . . . . . .  N NUMB   00CBH   A   
TPCR2L . . . . . . .  N NUMB   00CAH   A   
TR0. . . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . . .  B ADDR   0088H.6 A   
TRANSITION_LEFT. . .  C ADDR   0114H   A   
TRANSITION_RIGHT . .  C ADDR   00F5H   A   
TRIM . . . . . . . .  N NUMB   0096H   A   
TSD_LOOP0. . . . . .  C ADDR   00EAH   A   
TSD_LOOP1. . . . . .  C ADDR   00ECH   A   
TSD_LOOP2. . . . . .  C ADDR   00EEH   A   
TSD_LOOP3. . . . . .  C ADDR   01CAH   A   
TSD_LOOP4. . . . . .  C ADDR   01CCH   A   
TSD_LOOP5. . . . . .  C ADDR   01CEH   A   
TXD. . . . . . . . .  B ADDR   0090H.0 A   
WDCON. . . . . . . .  N NUMB   00A7H   A   
WDL. . . . . . . . .  N NUMB   00C1H   A   
WFEED1 . . . . . . .  N NUMB   00C2H   A   
WFEED2 . . . . . . .  N NUMB   00C3H   A   
XTAL1. . . . . . . .  B ADDR   00B0H.1 A   
XTAL2. . . . . . . .  B ADDR   00B0H.0 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
